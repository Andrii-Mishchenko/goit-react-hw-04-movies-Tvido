{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Components/Cast.js","Components/Reviews.js","views/MovieDetailsView.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Cast","state","cast","a","movieId","this","props","match","params","axios","get","response","setState","data","className","map","id","profile_path","name","character","src","alt","Component","Reviews","authors","console","log","results","author","content","MovieDetailsView","movie","genres","title","poster_path","overview","popularity","release_date","handleGoBack","location","history","from","date","substr","type","onClick","Math","round","genre","to","url","activeClassName","exact","path","component"],"mappings":"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","file":"static/js/7.74229a97.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const API_KEY = '822df93417c2789fa5aa8e4d6553456b';\r\n    const { movieId } = this.props.match.params;\r\n\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`,\r\n    );\r\n    this.setState({ cast: response.data.cast });\r\n  }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <ul className=\"\">\r\n          {cast.map(({ id, profile_path, name, character }) => (\r\n            <li key={id} className=\"\">\r\n              <div className=\"\">\r\n                {profile_path ? (\r\n                  <img\r\n                    className=\"Actor-img\"\r\n                    src={'https://image.tmdb.org/t/p/w400' + profile_path}\r\n                    alt={name}\r\n                  />\r\n                ) : (\r\n                  <p className=\"\">No photo</p>\r\n                )}\r\n              </div>\r\n\r\n              <h2>{name}</h2>\r\n              <p>Character: {character}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cast;\r\n","import { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    authors: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const API_KEY = '822df93417c2789fa5aa8e4d6553456b';\r\n    const { movieId } = this.props.match.params;\r\n\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`,\r\n    );\r\n    console.log(response.data.results);\r\n    this.setState({ authors: response.data.results });\r\n  }\r\n\r\n  render() {\r\n    const { authors } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <ul>\r\n          {!authors.length ? (\r\n            <h2>No reviews</h2>\r\n          ) : (\r\n            authors.map(author => (\r\n              <li key={author.id}>\r\n                <h2>Author: {author.author}</h2>\r\n                <p>'{author.content}'</p>\r\n              </li>\r\n            ))\r\n          )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reviews;\r\n","import React, { Component } from 'react';\r\nimport { Route, NavLink, Switch } from 'react-router-dom';\r\n\r\nimport Cast from '../Components/Cast';\r\nimport Reviews from '../Components/Reviews';\r\n\r\n// import routes from '../routes';\r\n\r\nimport axios from 'axios';\r\n\r\nclass MovieDetailsView extends Component {\r\n  state = {\r\n    movie: null,\r\n    genres: [],\r\n    id: null,\r\n    title: null,\r\n    poster_path: null,\r\n    overview: null,\r\n    popularity: null,\r\n    release_date: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const API_KEY = '822df93417c2789fa5aa8e4d6553456b';\r\n\r\n    const { movieId } = this.props.match.params;\r\n\r\n    const response = await axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`,\r\n    );\r\n\r\n    this.setState({ ...response.data });\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location, history } = this.props;\r\n\r\n    // history.push(location?.state?.from || routes.movies);\r\n\r\n    if (location.state && location.state.from) {\r\n      return history.push(location.state.from);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      genres,\r\n      id,\r\n      title,\r\n      poster_path,\r\n      overview,\r\n      popularity,\r\n      release_date,\r\n    } = this.state;\r\n\r\n    const { match } = this.props;\r\n\r\n    const date = `${release_date}`.substr(0, 4);\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.handleGoBack}>\r\n          Go Back\r\n        </button>\r\n\r\n        <div key={id} className=\"\">\r\n          <div className=\"\">\r\n            {poster_path ? (\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w300${poster_path}`}\r\n                alt={title}\r\n                className=\"\"\r\n              />\r\n            ) : (\r\n              <p className=\"\">No photo</p>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"\">\r\n            <h1>\r\n              {title}({date})\r\n            </h1>\r\n            <p>User Score: {Math.round(popularity)}%</p>\r\n            <h2>Overview</h2>\r\n            <p>{overview}</p>\r\n            <h3>Genres</h3>\r\n            <ul>\r\n              {genres.map(genre => (\r\n                <li key={genre.id}>{genre.name}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"\">\r\n          <h2>Additional information</h2>\r\n\r\n          <ul>\r\n            <li>\r\n              <NavLink\r\n                to={`${match.url}/cast`}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\"\r\n              >\r\n                Cast\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink\r\n                to={`${match.url}/reviews`}\r\n                className=\"NavLink\"\r\n                activeClassName=\"NavLink--active\"\r\n              >\r\n                Reviews\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n\r\n          <Switch>\r\n            <Route exact path={`${match.path}/cast`} component={Cast} />\r\n\r\n            <Route exact path={`${match.path}/reviews`} component={Reviews} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetailsView;\r\n"],"sourceRoot":""}